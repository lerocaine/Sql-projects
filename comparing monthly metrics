with fb_metr as (
    select *
    from facebook_ads_basic_daily fabd 
    left join facebook_adset fa on fabd.adset_id = fa.adset_id 
    left join facebook_campaign fc on fabd.campaign_id = fc.campaign_id
),
fb_and_ggl_metr as (
    select 
        ad_date,
        url_parameters,
        coalesce(spend, 0) as spend,
        coalesce(impressions, 0) as impressions,
        coalesce(reach, 0) as reach,
        coalesce(clicks, 0) as clicks,
        coalesce(leads, 0) as leads,
        coalesce(value, 0) as value 
    from fb_metr
    union all
    select 
        ad_date,
        url_parameters,
        coalesce(spend, 0) as spend,
        coalesce(impressions, 0) as impressions,
        coalesce(reach, 0) as reach,
        coalesce(clicks, 0) as clicks,
        coalesce(leads, 0) as leads,
        coalesce(value, 0) as value
    from google_ads_basic_daily gabd 
),
metrics as (
    select 
        date_trunc('month', ad_date) as ad_month,
        case 
            when lower(substring(url_parameters, 'utm_campaign=([^\&]+)')) = 'nan' then null
            else lower(substring(url_parameters, 'utm_campaign=([^\&]+)'))
        end as utm_campaign,
        sum(spend) as sum_spend,
        sum(impressions) as sum_impr,
        sum(clicks) as sum_clicks,
        sum(value) as sum_value,
        case 
            when sum(impressions) = 0 then null
            else (sum(clicks)::numeric / sum(impressions)) * 100
        end as ctr,
        case 
            when sum(clicks) = 0 then null
            else sum(spend)::numeric / sum(clicks)
        end as cpc,
        case 
            when sum(impressions) = 0 then null
            else (sum(spend)::numeric / sum(impressions)) * 1000
        end as cpm,
        case 
            when sum(spend) = 0 then null
            else (sum(value)::numeric - sum(spend)) / sum(spend)::numeric
        end as romi
    from fb_and_ggl_metr
    group by ad_month, utm_campaign
)
select 
    ad_month,
    utm_campaign,
    sum_spend,
    sum_impr,
    sum_clicks,
    sum_value,
    ctr,
    cpc,
    cpm,
    romi,
    case 
        when lag(cpm) over (partition by utm_campaign order by ad_month) is not null 
             and lag(cpm) over (partition by utm_campaign order by ad_month) != 0 then 
            ((cpm - lag(cpm) over (partition by utm_campaign order by ad_month)) / 
             lag(cpm) over (partition by utm_campaign order by ad_month)) * 100
        else null
    end as cpm_diff_percent,
    case 
        when lag(ctr) over (partition by utm_campaign order by ad_month) is not null 
             and lag(ctr) over (partition by utm_campaign order by ad_month) != 0 then 
            ((ctr - lag(ctr) over (partition by utm_campaign order by ad_month)) / 
             lag(ctr) over (partition by utm_campaign order by ad_month)) * 100
        else null
    end as ctr_diff_percent,
    case 
        when lag(romi) over (partition by utm_campaign order by ad_month) is not null 
             and lag(romi) over (partition by utm_campaign order by ad_month) != 0 then 
            ((romi - lag(romi) over (partition by utm_campaign order by ad_month)) / 
             lag(romi) over (partition by utm_campaign order by ad_month)) * 100
        else null
    end as romi_diff_percent
from 
    metrics
order by 
    utm_campaign, 
    ad_month;
